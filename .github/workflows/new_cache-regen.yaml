name: Cache regen

on:
#  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:


concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true


jobs:

  cache-regen-individual:
    name: Cache ${{ matrix.workspace }}
    runs-on: matterlabs-ci-runner-highmem-long
    strategy:
      matrix:
        workspace:
          - core
#          - prover
#          - zkstack_cli
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Setup runner
        uses: matter-labs/zksync-ci-common/.github/actions/runner-setup@aba-ci-optimize
        with:
          save_cache: true
          workspace: ${{ matrix.workspace }}

      - name: Generate cache
        working-directory: ${{ matrix.workspace }}
        run: |
          cargo build --all-targets
          cargo build --release --all-targets
          cargo nextest run --no-run

#  cache-regen-full:
#    runs-on: matterlabs-ci-runner-highmem-long
#    env:
#      RUSTFLAGS: "-C link-arg=-fuse-ld=mold"
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          submodules: "recursive"
#
#      - name: Setup runner
#        uses: matter-labs/zksync-ci-common/.github/actions/runner-setup@aba-ci-optimize
#        with:
#          save_cache: true
#
#      - name: Generate cache
#        run: |
#          for WORKSPACE in core prover zkstack_cli; do
#            (
#              cd "${WORKSPACE}"
#              cargo build --release
#              cargo nextest run --no-run --release
#              cargo clippy
#            )
#          done

  # TODO: maybe, there will be 3 different jobs in the future
#  cache-regen:
#    runs-on: matterlabs-ci-runner-highmem-long
#    container:
#      image: ghcr.io/matter-labs/zk-environment:latest2.0-lightweight
#      env:
#        SCCACHE_CACHE_SIZE: 50g
#        SCCACHE_GCS_BUCKET: matterlabs-infra-sccache-storage
#        SCCACHE_GCS_SERVICE_ACCOUNT: gha-ci-runners@matterlabs-infra.iam.gserviceaccount.com
#        SCCACHE_GCS_RW_MODE: READ_WRITE
#        ZKSYNC_USE_CUDA_STUBS: true
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        with:
#          submodules: "recursive"
#
#      - name: Rust cache
#        uses: Swatinem/rust-cache@v2
#        with:
#          workspaces: |
#            core -> target
#            prover -> target
#            zkstack_cli -> target
#          shared-key: "shared"
#          cache-all-crates: true
#          save-if: true
#
#      - name: Generate cache
#        run: |
#          for WORKSPACE in core prover zkstack_cli; do
#            (
#              cd "${WORKSPACE}"
#              cargo build --release
#              cargo nextest run --no-run --release
#              cargo clippy
#            )
#          done
