name: Build docker

on:
  workflow_call:
    secrets:
      dockerhub_user:
        description: 'Docker Hub username'
        required: false
      dockerhub_token:
        description: 'Docker Hub token'
        required: false
    inputs:
      image:
        type: string
        description: 'Docker image name.'
        required: true
      dockerfile:
        type: string
        description: 'Path to Dockerfile.'
        required: true
      version:
        type: string
        description: 'Docker image version.'
        required: true


# Use bash shell with verbose output
defaults:
  run:
    shell: 'bash -ex {0}'

# Add write permissions to the ghcr.io docker repository
permissions:
  packages: write

jobs:

  build:
    name: Build ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: amd64
            runner: matterlabs-ci-runner-high-performance
          - platform: arm64
            runner: matterlabs-ci-runner-arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.dockerhub_user }}
          password: ${{ secrets.dockerhub_token }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ inputs.image }}
            matterlabs/${{ inputs.image }}

      - name: Define whether to save cache
        # if: github.event_name != 'pull_request'
        id: set-cache-to
        run: echo "cache-to=type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ inputs.image }}:buildcache-${{ matrix.platform }},mode=max" >> "${GITHUB_OUTPUT}"

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        id: build
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          platforms: linux/${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: 'type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ inputs.image }}:buildcache-${{ matrix.platform }}'
          cache-to: ${{ steps.set-cache-to.outputs.cache-to }}
          outputs: type=image,"name=ghcr.io/${{ github.repository_owner }}/${{ inputs.image }},matterlabs/${{ inputs.image }}",push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.platform }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

    merge:
      runs-on: matterlabs-ci-runner-high-performance
      needs: build
      steps:
        - name: Download digests
          uses: actions/download-artifact@v4
          with:
            path: ${{ runner.temp }}/digests
            pattern: digests-*
            merge-multiple: true

        - name: Log in to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.dockerhub_user }}
            password: ${{ secrets.dockerhub_token }}

        - name: Login to GHCR
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ github.token }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Docker meta
          id: meta
          uses: docker/metadata-action@v5
          with:
            images: |
              ghcr.io/${{ github.repository_owner }}/${{ inputs.image }}
              matterlabs/${{ inputs.image }}

        - name: Create manifest list and push
          working-directory: ${{ runner.temp }}/digests
          shell: bash -ex {0}
          run: |
            docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
              $(printf 'ghcr.io/${{ github.repository_owner }}/${{ inputs.image }}@sha256:%s ' *)
            docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
              $(printf 'matterlabs/${{ inputs.image }}@sha256:%s ' *)

        - name: Inspect image
          run: |
            docker buildx imagetools inspect ghcr.io/${{ github.repository_owner }}/${{ inputs.image }}:${{ inputs.version }}
            docker buildx imagetools inspect matterlabs/${{ inputs.image }}:${{ inputs.version }}
